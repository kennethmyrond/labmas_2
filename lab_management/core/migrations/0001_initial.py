# Generated by Django 5.1.1 on 2024-10-26 02:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='laboratory',
            fields=[
                ('laboratory_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('department', models.CharField(blank=True, max_length=45, null=True)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('inventory', 'Inventory Management'), ('borrowing', 'Borrowing'), ('clearance', 'Clearance'), ('reservation', 'Laboratory Reservation'), ('reports', 'Reports')], max_length=50)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='borrow_info',
            fields=[
                ('borrow_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_date', models.DateTimeField(blank=True, null=True)),
                ('borrow_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('questions_responses', models.JSONField(blank=True, default=dict)),
                ('remarks', models.CharField(blank=True, max_length=45, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='borrowing_config',
            fields=[
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.laboratory', unique=True)),
                ('allow_walkin', models.BooleanField(default=False)),
                ('allow_prebook', models.BooleanField(default=False)),
                ('prebook_lead_time', models.IntegerField(default=0)),
                ('allow_shortterm', models.BooleanField(default=True)),
                ('allow_longterm', models.BooleanField(default=True)),
                ('questions_config', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='item_description',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(blank=True, max_length=45, null=True)),
                ('alert_qty', models.IntegerField(blank=True, null=True)),
                ('add_cols', models.CharField(blank=True, max_length=45, null=True)),
                ('rec_expiration', models.BooleanField(default=False)),
                ('is_disabled', models.BooleanField(default=False)),
                ('allow_borrow', models.BooleanField(default=False)),
                ('is_consumable', models.BooleanField(default=False)),
                ('laboratory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='item_inventory',
            fields=[
                ('inventory_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_purchased', models.DateTimeField(blank=True, null=True)),
                ('date_received', models.DateTimeField(blank=True, null=True)),
                ('purchase_price', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=45, null=True)),
                ('qty', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item_description')),
            ],
        ),
        migrations.CreateModel(
            name='item_expirations',
            fields=[
                ('expired_date', models.DateField(primary_key=True, serialize=False)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item_inventory')),
            ],
        ),
        migrations.CreateModel(
            name='item_types',
            fields=[
                ('itemType_id', models.AutoField(primary_key=True, serialize=False)),
                ('itemType_name', models.CharField(blank=True, max_length=45, null=True)),
                ('add_cols', models.TextField(default='[]')),
                ('is_consumable', models.BooleanField(default=False)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.AddField(
            model_name='item_description',
            name='itemType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.item_types'),
        ),
        migrations.CreateModel(
            name='LaboratoryModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.module')),
            ],
            options={
                'unique_together': {('laboratory', 'module')},
            },
        ),
        migrations.AddField(
            model_name='laboratory',
            name='modules',
            field=models.ManyToManyField(blank=True, through='core.LaboratoryModule', to='core.module'),
        ),
        migrations.CreateModel(
            name='reported_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_reported', models.IntegerField()),
                ('report_reason', models.CharField(max_length=255)),
                ('amount_to_pay', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reported_date', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (0, 'Cleared')], default=1)),
                ('borrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.borrow_info')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item_description')),
            ],
        ),
        migrations.CreateModel(
            name='reservation_config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_type', models.CharField(choices=[('class', 'Class Time'), ('hourly', 'Hourly')], default='class', max_length=10)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('require_approval', models.BooleanField(default=False)),
                ('require_payment', models.BooleanField(default=False)),
                ('approval_form', models.FileField(blank=True, null=True, upload_to='approval_forms/')),
                ('tc_description', models.CharField(blank=True, max_length=45, null=True)),
                ('leadtime', models.PositiveIntegerField(default=0)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('roles_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('permissions', models.CharField(blank=True, max_length=45, null=True)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='rooms',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('capacity', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('is_reservable', models.BooleanField(default=True)),
                ('blocked_time', models.CharField(blank=True, max_length=45, null=True)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='suppliers',
            fields=[
                ('suppliers_id', models.AutoField(primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=45)),
                ('contact_person', models.CharField(blank=True, max_length=45, null=True)),
                ('contact_number', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.laboratory')),
            ],
        ),
        migrations.AddField(
            model_name='item_inventory',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suppliers'),
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=45, null=True)),
                ('lastname', models.CharField(blank=True, max_length=45, null=True)),
                ('id_number', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_deactivated', models.BooleanField(default=False)),
                ('is_guest', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='laboratory_reservations',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(default='P', max_length=1)),
                ('purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('num_people', models.IntegerField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.rooms')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='item_transactions',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=45, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='item_handling',
            fields=[
                ('item_handling_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('changes', models.CharField(max_length=1)),
                ('qty', models.IntegerField()),
                ('remarks', models.CharField(blank=True, max_length=45, null=True)),
                ('inventory_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.item_inventory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
        ),
        migrations.AddField(
            model_name='borrow_info',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrowed_by', to='core.user'),
        ),
        migrations.CreateModel(
            name='borrowed_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('returned_qty', models.IntegerField(default=0)),
                ('remarks', models.CharField(blank=True, max_length=1, null=True)),
                ('borrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.borrow_info')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item_description')),
            ],
            options={
                'unique_together': {('borrow', 'item')},
            },
        ),
    ]
